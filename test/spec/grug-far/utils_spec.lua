local utils = require('grug-far/utils')
local match = assert.combinators.match

describe("strEllideAfter", function()
  it('returns empty string if n = 0', function()
    match('', utils.strEllideAfter("hello world", 0))
  end)
  it('returns string if strlen < n', function()
    match('hello world', utils.strEllideAfter("hello world", 20))
  end)
  it('returns ellided strign if strlen > n', function()
    match('hello...', utils.strEllideAfter("hello world", 5))
  end)
  it('adds prefix if proficed', function()
    match('say hello...', utils.strEllideAfter("hello world", 5, 'say '))
  end)
end)

describe("strFindLast", function()
  it('finds the last newline in a string when there are multiple', function()
    match(8, utils.strFindLast('one\ntwo\nthree', '\n'))
  end)
  it('finds the last newline in a string when it is the last item', function()
    match(8, utils.strFindLast('one\ntwo\n', '\n'))
  end)
  it('returns nil when there are none', function()
    match(nil, utils.strFindLast('one_two_three', '\n'))
  end)
end)
